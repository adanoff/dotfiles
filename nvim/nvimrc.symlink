syntax on
set smartindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set shiftround
set expandtab
set ignorecase
set smartcase
set number
set relativenumber
set numberwidth=5
set ruler
set splitright

set hidden
set bufhidden="unload"

set wildmode="longest,list:longest"

set laststatus=2 "Allow status bar with single window

"Set leader key to ,
let mapleader = ','

"Set local leader key to \
let maplocalleader = '\'

"Enable cursor shapes
let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
"let $NVIM_TUI_ENABLE_TRUE_COLOR=1

"Map jk to esc
inoremap jk <ESC>
inoremap <ESC> <NOP>

"Turn on filetype plugins
if has("autocmd")
    filetype plugin indent on
endif

" make filtype default to text if none is given
" FIXME currently sets filetype to text for terminals which is undesirable
"augroup default_ft
    "autocmd!
    "autocmd BufEnter * if &filetype == "" | setlocal ft=text | endif
    "autocmd TermOpen * set filetype=""
"augroup END

"Turn on omnicomplete
set omnifunc=syntaxcomplete#Complete

"Split windows below, not above
"set splitbelow

"Set par to be the format program
" TODO look into custom autocmd to change this when textwidth changes
set formatprg="par\ -w" . &textwidth

"Show invisible space characters
"Change to += to keep `$` at end of line
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
set list

"tmux integration
if exists('$TMUX')
      "set term=screen-256color
endif

if exists('$ITERM_PROFILE')
    if exists('$TMUX') 
        let &t_SI = "\<Esc>[3 q"
        let &t_EI = "\<Esc>[0 q"
    else
        let &t_SI = "\<Esc>]50;CursorShape=1\x7"
        let &t_EI = "\<Esc>]50;CursorShape=0\x7"
    endif
end

execute pathogen#infect()

" Terminal stuff
tnoremap jk <C-\><C-n>

" Fix focusing bug
let g:vitality_fix_focus=0

"Colorscheme stuff
"set t_Co=256
"Keep default colorscheme in hotkey window
if $ITERM_PROFILE !=? "Hotkey Window"
    colorscheme detailed
endif

"Copy selected text to clipboard
vnoremap <leader>A :w !pbcopy <CR><CR>

"Print file to a PostScript document and open that document
nnoremap <leader>P :ha > %:r.ps <CR> !open %:r.ps

"Spell check current file
"nnoremap spell :!aspell -c "%" <CR>

"Lorem Ipsum
"nnoremap LI :Loremipsum! 20 _ _<CR>

"==========Airline configuration==========

if !exists('g:airline_symbols')
   let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.crypt = 'ðŸ”’'
let g:airline_symbols.linenr = 'Â¶'
let g:airline_symbols.branch = 'âŽ‡'
let g:airline_symbols.paste = 'Ãž'
let g:airline_symbols.whitespace = 'Îž'

let g:airline_section_b = '%{getcwd()}'
let g:airline_section_x = '%y'

let g:airline#extensions#ctrlp#color_template = 'normal'

"========END Airline configuration========

"Make it easier to replace with the first suggestion for spelling
nnoremap <leader>z= 1z=

"Make it easier to edit vimrc from vim
nnoremap <leader>vie :vsplit $MYVIMRC<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" Remove search highlighting
nnoremap <C-L> :noh<CR><C-L>

"====================dragvisuals.vim setup====================
vnoremap  <expr>  <LEFT>   DVB_Drag('left')
vnoremap  <expr>  <RIGHT>  DVB_Drag('right')
vnoremap  <expr>  <DOWN>   DVB_Drag('down')
vnoremap  <expr>  <UP>     DVB_Drag('up')
vnoremap  <expr>  D        DVB_Duplicate()

" Remove any introduced trailing whitespace after moving
let g:DVB_TrimWS = 1
"====================end dragvisuals.vim setup====================

"==========show highlighting group for current word==========
"NEED TO DISABLE `CtrlP` plugin to make this mapping work
nnoremap <Leader><C-P> :call <SID>SynStack()<CR>
function! <SID>SynStack()
    if !exists("*synstack")
        return
    endif
    echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc
"========end show highlighting group for current word========

"Gundo.vim configuration
nnoremap <F5> :GundoToggle<CR>

"Disable CtrlP
"let g:loaded_ctrlp = 1

"easier space-making
nnoremap <Leader>o A<CR><CR><C-O>O
nnoremap <Leader>O I<CR><CR><Esc>k0Dk0Do

"==========abbreviations==========
iabbrev adn and
iabbrev tehn then
iabbrev waht what
iabbrev teh the
iabbrev @@ aadanoff@gmail.com
iabbrev ssig Alex Danoff<CR>C: (301) - 512 - 8905
"========end abbreviations========

let g:snips_author = "Alex Danoff"

" Tagbar stuff
let g:tagbar_autofocus = 1
nnoremap <F6> :TagbarToggle<CR>

" NERDCommenter config
let g:NERDSpaceDelims = 1
